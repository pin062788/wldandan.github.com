---
layout: page
title: "关于我"
date: 2016-10-08 19:28
comments: true
sharing: true
footer: true
description: "微服务架构培训"
keywords: 微服务架构培训, 微服务架构咨询
---


我是王磊，热爱编程，热爱分享，喜欢旅行，喜欢游泳，更喜欢在青山绿水之间，感受大自然的气息。

目前居住在西安，任华为服务化架构技术专家，曾任ThoughtWokrs首席咨询师，尚度元CTO以及多家知名外企的Tech Leader。

超过10年以上的软件行业经验，国内较早倡导和实践微服务的先行者，精通敏捷/持续交付/微服务架构/DevOPS的核心理念、价值观、方法论和实践。

从企业应用、互联网应用、服务化平台的架构设计、开发到自动化构建、持续集成、持续交付以及DevOps的转型实施等有较丰富的实践经验。

<img src="{{ root_url }}/images/about/wanglei-600-450.png" />

* [Linkedin Profile 链接](http://www.linkedin.com/in/liuzheng)
* [个人Blog](http://wldandan.github.com)

多次受邀在大型技术会议主题分享“微服务架构”相关主题，并著有国内首本微服务架构相关书籍《微服务架构与实践》一书，在InfoQ以及《架构师》上发表多篇关于架构相关文章，也在多个线上社群（InfoQ、StuQ、CSDN、聊聊架构）分享过架构经验。曾经组织过GDCR西安，敏捷西安，并译有《Ruby Gems开发实战》一书。

目前致力于持续交付/微服务架构/DevOPS的方法论与实践，打造持续交付、微服务架构和容器技术组成的数字化核心能力。

###发表的文章

* [企业落地微服务必备的三个能力](http://www.infoq.com/cn/minibooks/architect-201604?utm_source=minibooks_about_architect&utm_medium=link&utm_campaign=architect)
* [从单块架构到微服务架构](http://www.infoq.com/cn/articles/from-monolith-application-to-micro-service)
* [微服务与持续交付](http://www.infoq.com/cn/articles/microservice-and-continuous-delivery)
* [基于微服务架构，改造企业核心系统之实践](http://www.infoq.com/cn/articles/enterprise-core-systems-transformation-practice)
* [单块架构系统以及其面临的挑战](http://www.infoq.com/cn/articles/analysis-the-architecture-of-microservice-part-01)
* [微服务架构综述](http://www.infoq.com/cn/articles/analysis-the-architecture-of-microservice-part-02)


## 演讲&分享

* 2016.8 上海 全球微服务峰会 《微服务与遗留系统改造》
* 2016.4 北京.QCon 微服务架构专题出品人 
* 2015.7 西安.SegmentFault-开发者实践日 《拥抱微服务》
* 2015.5 杭州.七牛-互联网架构实践日 《微服务，大探险》
* 2015.4 北京.QCon《使用微服务改造企业核心系统之实践》  
* 2015.3 深圳.开源中国-架构师实践 《微服务架构》 

## 项目案例

* 某知名ICT公司 - 微服务架构咨询与实施
* Chris Richardson微服务公开课 - 微服务架构同声传译 
* 上海/某知名钢铁领域制造商 - 微服务架构与实践培训 
* 上海/某外资银行 - 微服务架构与实践培训
* 北京/某外资银行 - 微服务架构与实践培训
* 西安/某制造业公司 - 微服务架构咨询与实施
* 深圳/某金融评级中心 - 微服务架构与实践培训

## 出版的书籍

### 《微服务架构与实践》
<img src="{{ root_url }}/images/about/microservice-book-400-300.png" />

#### 本书内容介绍
随着RESTful、云计算、DevOps、持续交付等概念的深入人心，微服务架构逐渐成为系统架构的一个代名词。本书首先从理论出发，介绍了微服务架构的概念、诞生背景、本质特征以及优缺点；然后基于实践，探讨了如何从零开始构建一个微服务，包括Hello World API、Docker 映像构建与部署、日志聚合、监控告警、持续交付流水线等；最后，在进阶部分讨论了微服务的轻量级通信、消费者驱动的契约测试，并通过一个真实的案例描述了如何使用微服务架构改造遗留系统。全书内容丰富，条理清晰，通俗易懂，是一本理论结合实践的微服务架构的实用书籍。

本书不仅适合架构师、开发人员、测试人员以及运维人员阅读，也适合正在尝试使用微服务架构解耦历史遗留系统的团队或者个人参考，希望本书能在实际工作中对读者有所帮助。

　　
**精彩书评**


> 微服务的出现，为运维又打开了一扇窗。微服务将整个业务系统拆分为相对独立的业务模块，并强调各个微服务都可以独立测试、独立部署、独立运行；微服务之间是一种真正的低耦合，就像汽车的各个零部件，哪个坏了，拆掉换个新的就能组装上；微服务面向产品而不是项目，这样，开发、测试、运维（系统、 DBA等）可形成更稳定的“小”团队，而不是项目周期一到，各个职能解散，各回各家；微服务配以 Docker，更可谓珠联璧合。这些都对运维提出了新的机遇和挑战，熟悉 DevOps、懂 Docker、沟通能力强的综合型运维人员，市场需求和价值更加突显。纵览全书，说理清楚，用清晰明了的文字，帮助大家理清了很多似是而非的概念；图文并茂，图片既清晰又贴切，语言朴实、平易近人，没有从国外翻译过来的书籍那种生硬、别扭的感觉；理论结合实际，更多融合了作者实施微服务的一线经验。是一本非常用心、又可以实际落地的好书。——萧田国 开放运维联盟联合主席，高效运维社区创始人

> 微服务架构作为 SOA在众多互联网公司中的成功新实践，是广大企业在互联网化进程中必须理解的概念。本书不仅讲述了微服务的基础理论，而且通过实例，深入浅出地涵盖了微服务构建过程中持续集成、构建、部署、持续交付以及日志聚合和运维的过程，体现了作者深厚的理论功底与扎实的实践经验，推荐阅读。  ——徐唤春 上海商派软件有限公司技术副总裁

> 微服务的概念初看简单清晰、容易理解，但在企业中的实际实施其实是一件很困难的事情。尤其很多计划实施微服务的公司在服务划分、 DevOps和相应的组织结构变化方面毫无经验，付出了实施的代价，却很难真正享受到微服务带来的好处。这本书总结了作者两年多在真实大型软件系统上实施微服务的经验和心得，具体指导了微服务实施在技术方面的实践，非常值得参考。——杨云 ThoughtWorks首席咨询师，前支付宝资深架构师

> 随着应用系统的不断发展演进，单体应用变得越来越大，越来越复杂，导致扩展性差，资源优化难，维护成本高等问题。为了应对这一挑战，一种更加灵活、轻便、松耦合的设计架构——微服务架构，正受到越来越多应用系统开发者的青睐，它的敏捷开发、灵活部署、易扩展等特性，使它成为解决复杂应用的一把利器。微服务架构在具体实践中是怎样实施的？它在实施过程中存在怎样的困难和挑战?作者在本书中通过理论结合实践的方式，深入浅出地阐述了微服务的本质以及如何有效地、持续地交付微服务，并给出了许多有价值的实践指导，全书内容丰富，理论结合实际，推荐阅读。——薛正华博士 中国计算机学会高级会员，大数据专委会委员


### 《Ruby Gems开发实战》- 翻译

<img src="{{ root_url }}/images/about/practical-rubygems-400-300.png" />

#### 本书内容介绍
《Ruby Gems开发实战》是讨论如何在Ruby或者Rails项目中使用现有Ruby解决方案的全面指导书，同时它也涵盖了如何创建或者分发Ruby软件包的相关内容。《Ruby Gems开发实战》分为三部分，分别为使用Ruby Gems、使用特殊的Ruby Gems包和创建Ruby Gems包。

《Ruby Gems开发实战》非常适合Ruby开发者阅读，也适合那些使用Rails，或是希望对现有Ruby、Rails项目进行扩展的开发者。

《Ruby Gems开发实战》通过丰富的示例，向读者介绍了当今最具影响的34个Ruby Gems包，其中包括

* 使用Creditcard验证信用卡。
* 使用FxRuby创建跨平台的GUI应用程序。
* 使用Memcache-Client提高Rails应用程序的效率。
* 使用Camping开发轻量级的Web应用程序。
* 使用ActiveRecord简化数据库访问。
* 使用Feedtools处理RSS Feed。
* 使用RMagick处理图片。

> 通过对这些Gems包的学习，你能立刻在项目中使用它们。
>通过阅读《Ruby Gems开发实战》，你也将学会如何封装或者分发自己的Ruby Gems，以及如何使用Ruby 
>Gems处理不同Gems包间的依赖，或者相同Gems包的不同版本之间的依赖。
>另外，《Ruby Gems开发实战》也详细说明了在不同操作系统（如Mac、Windows或者Linux）上使用Ruby Gems的差异。通过对《Ruby Gems开发实战》的学习，你将学会如何利用Ruby Gems，在多个Ruby或Rails项目中更容易地重用代码。当然，你也可以向更多的Ruby爱好者提供你的Ruby Gems。 



你可以通过如下方式联系我：

* 微信：wldandan

* 邮箱：5109343@qq.com


