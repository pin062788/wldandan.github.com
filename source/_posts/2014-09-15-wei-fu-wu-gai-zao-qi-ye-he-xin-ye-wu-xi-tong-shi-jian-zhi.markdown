---
layout: post
title: "微服务改造企业核心业务系统实践之二 (什么是微服务)"
date: 2014-09-15 15:56
comments: true
categories: 
---

###微服务的出现

多年来，我们一直在技术的浪潮中不断乘风破浪，扬帆奋进，寻找更好的方式构建IT系统。

微服务架构(Micro Service Architect)，是近几年在软件体架构领域里出现的一个新名词。它通过将功能分解到多个独立的服务中以实现对解决方案或者复杂系统的解耦。

其实，微服务的诞生并不是偶然的。领域驱动设计指导我们如何分析并模型化复杂的业务，敏捷方法论帮助我们消除浪费，快速反馈，持续交付实现了更快、更可靠、低成本的自动化软件交付。虚拟化和基础设施自动化则帮助我们简化复杂环境的创建、安装。DevOps活动的流行以及团队的出现，使得一个团队变得更加全能。这些都是推动微服务诞生必不可少的因素。


###什么是微服务

实际上，微服务本身并没有一个严格的定义。不过从业界的讨论来看，大家已经达成了这样一个共识。

##### 小，且专注于做一件事情
每个服务都是个很小的应用，至于有多小，一直是一个非常有争议的话题，有人喜欢100行以内，有人赞成1000行以内。仁者见仁，智者见智，数字并不是最重要的，只要团队觉得合适就好。只关注一个业务功能。这一点和我们平常谈论的面向对象原则中的"Single Responsibility"非常类似，每个服务只做一件事情，并且把它做好。


##### 运行在独立的进程中
每个服务都运行在一个独立的操作系统进程，这也意味着不同的服务能被部署到不同的主机上。

##### 服务和服务之间通过轻量级的机制实现彼此间的通信
服务之间的沟通协作，是通过语言无关、平台无关的协议完成。例如XML，JSON，而不是Java的RMI或者.Net的Remoting等。

##### 松耦合
不改变其他依赖，只更改当前服务本身，依然可以直接部署。这意味着该服务和其他系统或者服务之间呈现松耦合的状态。

因此，微服务是用一组小服务的方式来构建一个应用。服务独立运行在不同的进程中，服务之间通过轻量的通讯机制交互，并且服务可以通过自动化部署方式独立部署。


###微服务的优点
微服务的优点是多方面的。不过，这些优点很大程度上取决于采取分布式系统和面向服务的架构所带来的优点。

##### 技术异构性

传统的单块架构(monolithic)系统倾向采用统一的技术平台或方案来解决所有问题。不是每个问题都是钉子，也不是每个解决方案都是一个锤子。问题有其具体性，解决方案也应有其针对性。用最适合的技术方案去解决具体的问题，往往会事半功倍，但在传统的单块架构应用中其实很难做到，而微服务的架构意味着，可以针对不同的业务特征选择不同的技术平台或产品，有针对性的解决具体的业务问题。譬如，我们可以使用Go而不是Java来开发对性能要求较高的某个部分，使其能够更好地达到所需的性能水平。

另外，基于微服务架构，我们也能更敏捷地尝试新的技术或解决方案。对于单块架构的系统，如果想尝试新的编程语言，数据库或者框架，如果没有完备的功能测试集，很难在平滑的完成替换，而且系统规模越大，风险越高。而对于多服务组成的系统，可以先挑选风险最小的服务作为试点，只要保证通信协议的内容和格式不变，对整个系统的影响非常小。

	
##### 易测试，易部署
对于一个单块架构系统，由于系统是运行在一个或者几个进程中，因此即便修改了其中很小的一部分，也需要对整个系统重新规划、重新测试，否则有可能会面临高风险。譬如，即便提交了1行代码，也需要花时间重新生成整个单块架构产品的发布包，再然后将其作为整体，等待验收测试完成后再部署到产品环境。

而对微服务架构而言，不同服务之间的打包、测试或者部署等，与其它服务都是完全独立的。如果对某服务做了改动，只需要关注该服务本身的打包、测试以及部署。从这个角度来说，使用微服务后，代码修改、测试、打包以及部署的成本和风险都比单块架构系统低得多。

##### 传统的整体风格的架构在构建部署和扩展伸缩方面有很大的局限性